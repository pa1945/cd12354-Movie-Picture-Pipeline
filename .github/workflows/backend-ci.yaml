#
# https://www.cloudtechsimplified.com/beginners-guide-to-github-actions/
#
name: Backend CI - lint, test, build

on:
  workflow_dispatch:

  pull_request:
    # A Continuous Integration workflow that:
    # Runs on pull_requests against the main branch,only when code in the frontend application changes.
    # Is able to be run on-demand, manually without needing to push code
    branches: [main]
    #  - main
    paths:
      - 'backend/**'       # ? - 'frontend/**'
    # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#pull_request
    types: [opened, reopened]

env:
  #IMAGE_NAME: backend
  COMPONENT_NAME: backend-ci
  SHA7: ${GITHUB_SHA:0:7}
  SHA8: ${GITHUB_SHA:0:7}

jobs:
  lint-bci:
    name: Backend CI Linting
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: pipenv installation
        run: pip install pipenv

      - name: Caching python
        id: cache-python
        uses: actions/cache@v3
        with:
          path: ~/.local/share/virtualenvs  
          key: python-${{ runner.os }}-${{ hashFiles('**/Pipfile.lock') }}
          # The “key” part of the cache uniquely identify each version of our cache.

      - name: Install dependencies
        run: pipenv install --dev

      - name: Linting backend
        run: pipenv run lint

  test-bci:
    name: Backend CI code testing
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install pipenv
        run: pip install pipenv

      - name: Cache dependencies
        id: cache-python
        uses: actions/cache@v3
        with:
          path: ~/.local/share/virtualenvs
          # For Python pipenv, cache files are stored in `~/.local/share/virtualenvs`
          key: python-${{ runner.os }}-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install dependencies
        run: pipenv install --dev

      - name: Run backend CI test
        run: pipenv run test

  build:
    name: Build backend CI job
    runs-on: ubuntu-latest
    # Runs the following tasks in parallel: lint, test
    # Runs a build job only if the lint and test jobs succeed
    # All jobs run in parallel, unless specified otherwise.
    #
    needs: [lint-bci, test-bci]
    if: success()
    defaults:
      run:
        shell: bash
        working-directory: backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build docker image
        # Build the image
        run: |
          #
          echo SHA7: "${ SHA7 }"
          #echo SHA8: "${ SHA8 }"
          echo GITHUB_SHA: "${GITHUB_SHA}"
          #echo "--- docker search ---"
          #docker search --limit 3 $COMPONENT_NAME:${{ github.sha }}
          echo "--- List all docker containers, punning and ftopped ---"
          docker ps --all     # List all docker containers, running and stopped
          echo "--- docker images ---"
          docker images
          echo "--- TESTING_VAR: ---"
          echo ${{ vars.TESTING_VAR }}
          echo "--- docker build ---"
          #docker build . --tag mp-backend:latest
          #docker build -t $COMPONENT_NAME:${{ github.sha }} .
          docker build -t $COMPONENT_NAME:${{ SHA7 }} .
          echo "--- docker images ---"
          docker images
          #run: docker build --tag mp-backend:latest .
          # Run the image
          #run: docker run -p 5000:5000 --name mp-backend -d mp-backend

